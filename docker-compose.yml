version: '3.8'

services:
  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./sites-enabled:/etc/nginx/sites-enabled:ro
      - ./conf.d:/etc/nginx/conf.d:ro
    restart: unless-stopped

  # Docker-gen for automatic upstream configuration
  docker-gen:
    image: nginxproxy/docker-gen:latest
    container_name: docker-gen
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-upstream.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - ./conf.d:/etc/nginx/conf.d:rw
    command: >
      -notify-sighup nginx-proxy
      -watch
      -only-exposed
      /etc/docker-gen/templates/nginx.tmpl
      /etc/nginx/conf.d/docker_upstream_hosts.conf
    restart: unless-stopped
    depends_on:
      - nginx

  # Simple HTTP Server replicas
  webapp:
    image: jwilder/whoami
    healthcheck:
      test: test ! -f /tmp/drain
      interval: 5s
      retries: 1
    labels:
      docker-rollout.pre-stop-hook: "touch /tmp/drain && sleep 10"
    environment:
      - NGINX_UPSTREAM=webapp-upstream
      - NGINX_UPSTREAM_PORT=8000
    expose:
      - "8000"
    restart: unless-stopped
    deploy:
      replicas: 3
